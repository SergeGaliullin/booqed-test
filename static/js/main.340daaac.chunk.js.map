{"version":3,"sources":["api/github.js","components/SearchBar.js","components/CandidateKnowledgeStatus.js","components/CandidateCard.js","components/CandidateList.js","components/App.js","index.js"],"names":["axios","create","baseURL","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","Header","as","value","onChange","e","setState","target","type","React","Component","CandidateKnowledgeStatus","currentStatus","Icon","name","color","disabled","CandidateCard","knowsJavaScript","knowsReact","knowsReactNative","usesTests","networkError","buttonColor","analysisOnGoing","onButtonClick","_","a","reactCheck","reactNativeCheck","javaScriptCheck","testsUsageCheck","buttonColorUpdate","github","get","params","q","candidate","login","response","data","total_count","avatar_url","html_url","Item","Image","size","src","Content","href","rel","Table","celled","structured","Body","Row","Cell","Button","loading","onClick","CandidateList","candidates","map","key","id","Group","App","pageNumber","pageAmount","searchTerm","onSearchSubmit","page","items","Math","round","alert","Container","Dimmer","active","inverted","Loader","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.340daaac.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.github.com',\n});","import React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport './CandidateCard.css';\n\nclass SearchBar extends React.Component {\n    state = {\n        term: ''\n    };\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state.term, 1);\n    }\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <Header as='h1'><span className=\"search-text text-green\">Le Github Candidate <span\n                            className=\"text-orange\">Analyzer</span></span></Header>\n                        <input\n                            value={this.state.term}\n                            onChange={e => this.setState({term: e.target.value})}\n                            type=\"text\"\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from \"react\";\nimport {Icon} from \"semantic-ui-react\";\n\nclass CandidateKnowledgeStatus extends React.Component {\n    render() {\n        switch (this.props.currentStatus) {\n            case true:\n                return <Icon name='checkmark' color={\"green\"}/>\n            case false:\n                return <Icon name='close' color={\"red\"}/>\n            default:\n                return <Icon disabled name='checkmark'/>\n        }\n    }\n}\n\nexport default CandidateKnowledgeStatus;","import React from \"react\";\nimport {Button, Item, Table} from 'semantic-ui-react';\nimport github from \"../api/github\";\nimport './CandidateCard.css';\nimport CandidateKnowledgeStatus from \"./CandidateKnowledgeStatus\";\n\n\nconst USES_REACT = \"import React from 'react';\";\nconst USES_REACT_NATIVE = 'react-native';\nconst USES_JAVASCRIPT = '() =>';\nconst USES_TESTS = 'shallow';\n\n\nclass CandidateCard extends React.Component {\n    state = {\n        knowsJavaScript: null,\n        knowsReact: null,\n        knowsReactNative: null,\n        usesTests: null,\n        networkError: false,\n        buttonColor: 'orange',\n        analysisOnGoing: false\n    };\n\n    async reactCheck() {\n        try {\n            const response = await github.get(`/search/code`, {\n                params: {\n                    q: `${USES_REACT}+user:${this.props.candidate.login}`\n                },\n            });\n            if (response.data) {\n                if (response.data.total_count > 1) {\n                    this.setState({knowsReact: true, knowsJavaScript: true});\n                } else {\n                    this.setState({knowsReact: false})\n                }\n            }\n        } catch (error) {\n            this.setState({networkError: true});\n        }\n    }\n\n    async reactNativeCheck() {\n        try {\n            const response = await github.get(`/search/code`, {\n                params: {\n                    q: `${USES_REACT_NATIVE}+user:${this.props.candidate.login}`\n                },\n            });\n            if (response.data) {\n                if (response.data.total_count > 1) {\n                    this.setState({knowsReactNative: true, knowsJavaScript: true});\n                } else {\n                    this.setState({knowsReactNative: false})\n                }\n            }\n        } catch (e) {\n            this.setState({networkError: true});\n        }\n    }\n\n    async javaScriptCheck() {\n        if (!this.state.knowsJavaScript) {\n            try {\n                const response = await github.get(`/search/code`, {\n                    params: {\n                        q: `${USES_JAVASCRIPT}+user:${this.props.candidate.login}`\n                    },\n                });\n                if (response.data) {\n                    if (response.data.total_count > 1) {\n                        this.setState({knowsJavaScript: true});\n                    } else {\n                        this.setState({knowsJavaScript: false})\n                    }\n                }\n            } catch (e) {\n                this.setState({networkError: true});\n            }\n        }\n    }\n\n    async testsUsageCheck() {\n        if (this.state.knowsJavaScript) {\n            try {\n                const response = await github.get(`/search/code`, {\n                    params: {\n                        q: `${USES_TESTS}+user:${this.props.candidate.login}`\n                    },\n                });\n                if (response.data) {\n                    if (response.data.total_count > 1) {\n                        this.setState({usesTests: true});\n                    } else {\n                        this.setState({usesTests: false})\n                    }\n                }\n            } catch (e) {\n                this.setState({networkError: true});\n            }\n        } else {\n            if (!this.state.networkError) {\n                this.setState({usesTests: false})\n            }\n        }\n    }\n\n    async buttonColorUpdate() {\n        if (\n            this.state.knowsJavaScript &&\n            this.state.knowsReact &&\n            this.state.knowsReactNative &&\n            this.state.usesTests\n        ) {\n            this.setState({buttonColor: 'green'});\n        } else if (\n            !this.state.knowsJavaScript &&\n            !this.state.knowsReact &&\n            !this.state.knowsReactNative &&\n            !this.state.usesTests\n        ) {\n            this.setState({buttonColor: 'red'});\n        } else {\n            this.setState({buttonColor: 'yellow'});\n        }\n    }\n\n    onButtonClick = async _ => {\n        this.setState({analysisOnGoing: true});\n        await this.reactCheck();\n        await this.reactNativeCheck();\n        await this.javaScriptCheck();\n        await this.testsUsageCheck();\n        await this.buttonColorUpdate();\n        this.setState({analysisOnGoing: false});\n    }\n\n    render() {\n        const {avatar_url, login, html_url} = this.props.candidate;\n\n        return (\n            <Item>\n                <Item.Image size='tiny' src={avatar_url}/>\n\n                <Item.Content>\n                    <Item.Header>\n                        <a href={html_url} target=\"_blank\" rel='noreferrer noopener'>{login}</a>\n                        {this.state.networkError ?\n                            <span className=\"text-red\">&nbsp;(Error: couldn't load data)</span> : null}\n                    </Item.Header>\n                    <Table celled structured>\n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell>JavaScript</Table.Cell>\n                                <Table.Cell>React</Table.Cell>\n                                <Table.Cell>React Native</Table.Cell>\n                                <Table.Cell>Uses Tests</Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell><CandidateKnowledgeStatus\n                                    currentStatus={this.state.knowsJavaScript}/></Table.Cell>\n                                <Table.Cell><CandidateKnowledgeStatus\n                                    currentStatus={this.state.knowsReact}/></Table.Cell>\n                                <Table.Cell><CandidateKnowledgeStatus\n                                    currentStatus={this.state.knowsReactNative}/></Table.Cell>\n                                <Table.Cell><CandidateKnowledgeStatus\n                                    currentStatus={this.state.usesTests}/></Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n                    </Table>\n                </Item.Content>\n                {this.state.analysisOnGoing ?\n                    <Button loading color={this.state.buttonColor} onClick={this.onButtonClick}>Analyze</Button> :\n                    <Button color={this.state.buttonColor} onClick={this.onButtonClick}>Analyze</Button>}\n            </Item>\n        );\n    }\n}\n\nexport default CandidateCard;\n\n","import React from 'react';\nimport CandidateCard from \"./CandidateCard\";\nimport {Item} from 'semantic-ui-react';\n\nconst CandidateList = props => {\n    const candidates = props.candidates.map(candidate => {\n        return <CandidateCard key={candidate.id} candidate={candidate}/>\n    });\n    return <Item.Group>{candidates}</Item.Group>;\n}\n\nexport default CandidateList;","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport github from \"../api/github\";\nimport SearchBar from \"./SearchBar\";\nimport CandidateList from \"./CandidateList\";\nimport {Container, Dimmer, Loader} from \"semantic-ui-react\";\n\n\nconst ITEMS_PER_PAGE = 30;\n\nclass App extends React.Component {\n    state = {\n        candidates: [],\n        loading: false,\n        pageNumber: 1,\n        pageAmount: 0,\n        searchTerm: \"\"\n    };\n\n    onSearchSubmit = async (term, page) => {\n        this.setState({\n            loading: true,\n            searchTerm: term,\n            pageNumber: page\n        });\n\n        try {\n            const response = await github.get(`/search/users`, {\n                params: {\n                    q: term,\n                    page: page\n                },\n            });\n            if (response.data) {\n                this.setState({\n                    candidates: response.data.items,\n                    loading: false,\n                    pageAmount: Math.round(response.data.total_count / ITEMS_PER_PAGE),\n                });\n            }\n        } catch (e) {\n            this.setState({\n                loading: false\n            });\n            alert(\"Couldn't connect to Github API! Try again later\");\n        }\n\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                {this.state.loading ?\n                    <Dimmer active inverted>\n                        <Loader inverted>Loading Profiles</Loader>\n                    </Dimmer> :\n                    <CandidateList candidates={this.state.candidates}/>\n                }\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n);\n\n"],"sourceRoot":""}